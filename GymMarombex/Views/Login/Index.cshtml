@model GymMarombex.Models.Login

@{
  Layout = null;
  ViewBag.Title = "Index";

  //if(Session["userID"] == null) {
  //    Response.Redirect("~/Login/Index");
  //}
}

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>MarombexGym - Login</title>
    <link hhref="https://fonts.googleapis.com/css?family=Open+Sans:400,700" rel="stylesheet">
    <style>
        body {
            background: #456;
            font-family: 'Open Sans', sans-serif;
        }

        .login {
            width: 400px;
            margin: 16px auto;
            font-size: 16px;
        }

            /* Reset top and bottom margins from certain elements */
            .login-header,
            .login p {
                margin-top: 0;
                margin-bottom: 0;
            }

        /* The triangle form is achieved by a CSS hack */
        .login-triangle {
            width: 0;
            margin-right: auto;
            margin-left: auto;
            border: 12px solid transparent;
            border-bottom-color: #28d;
        }

        .login-header {
            background: #28d;
            padding: 20px;
            font-size: 1.4em;
            font-weight: normal;
            text-align: center;
            text-transform: uppercase;
            color: #fff;
        }

        .login-container {
            background: #ebebeb;
            padding: 12px;
        }

        /* Every row inside .login-container is defined with p tags */
        .login p {
            padding: 12px;
        }

        .login input {
            box-sizing: border-box;
            display: block;
            width: 100%;
            border-width: 1px;
            border-style: solid;
            padding: 16px;
            outline: 0;
            font-family: inherit;
            font-size: 0.95em;
        }

            .login input[type="UserName"],
            .login input[type="Password"] {
                background: #fff;
                border-color: #bbb;
                color: #555;
            }

                /* Text fields' focus effect */
                .login input[type="UserName"]:focus,
                .login input[type="Password"]:focus {
                    border-color: #888;
                }

            .login input[type="submit"] {
                background: #28d;
                border-color: transparent;
                color: #fff;
                cursor: pointer;
            }

                .login input[type="submit"]:hover {
                    background: #17c;
                }

                /* Buttons' focus effect */
                .login input[type="submit"]:focus {
                    border-color: #05a;
                }

        .field-validation-error {
            color: red;
        }
    </style>
</head>
<body>
    <div class="login">
        <div class="login-triangle"></div>

        <h2 class="login-header">Log in</h2>



        @using (Html.BeginForm("Authorize", "Login", FormMethod.Post, htmlAttributes: new { @class = "login-container" })) {

            <label class="field-validation-error">@Html.DisplayFor(model => model.LoginErrorMessage)</label>
            <p>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { placeholder = "Login" } })
            </p>
            <p>
                @Html.ValidationMessageFor(model => model.UserName)
            </p>

            <p>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password" } })
            </p>
            <p>
                @Html.ValidationMessageFor(model => model.Password)
            </p>            

            <p><input type="submit" value="Entrar"></p>

        }
    </div>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</body>
</html>